peer lifecycle chaincode package testreportcc.tar.gz \
--path /home/vm1/hlf-test-multi-org/artifacts/src/github.com/moamda/chaincode-go \
--lang golang \
--label testreportcc_1


peer lifecycle chaincode install testreportcc.tar.gz


export CHAINCODE_ID=$(peer lifecycle chaincode calculatepackageid testreportcc.tar.gz) && echo $CHAINCODE_ID


peer lifecycle chaincode checkcommitreadiness \
--channelID channel1 \
--name testreportcc \
--version 1.0.1 \
--sequence 1 \
--output json


peer lifecycle chaincode approveformyorg -o 192.168.0.13:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA \
--channelID channel1 \
--name testreportcc \
--version 1.0.1 \
--package-id $CHAINCODE_ID \
--sequence 1


peer lifecycle chaincode commit -o 192.168.0.13:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA \
--channelID channel1 \
--name testreportcc \
--peerAddresses 192.168.0.21:7051 --tlsRootCertFiles $PEER0_ORG1_CA \
--peerAddresses 192.168.0.22:7051 --tlsRootCertFiles $PEER1_ORG1_CA \
--version 1.0.1 \
--sequence 1

// QUERY 
peer chaincode query \
-C channel1 \
-n testreportcc \
-c '{"Args":["ReadAsset","tsr100"]}'


// QUERY ALL ASSET
peer chaincode query \
-C channel1 \
-n testreportcc \
-c '{"Args":["GetAllAssets"]}'


// CREATE ASSET
peer chaincode invoke -o 192.168.0.13:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA \
-C channel1 \
-n testreportcc \
--peerAddresses 192.168.0.21:7051 --tlsRootCertFiles $PEER0_ORG1_CA \
--peerAddresses 192.168.0.22:7051 --tlsRootCertFiles $PEER1_ORG1_CA \
-c '{"Args":["CreateAsset","tsr100","techy","mojojojo","05/13/2024"]}'


// INIT LEDGER
peer chaincode invoke -o 192.168.0.13:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA \
-C channel1 \
-n testreportcc \
--peerAddresses 192.168.0.21:7051 --tlsRootCertFiles $PEER0_ORG1_CA \
--peerAddresses 192.168.0.22:7051 --tlsRootCertFiles $PEER1_ORG1_CA \
-c '{"function":"InitLedger","Args":[]}'